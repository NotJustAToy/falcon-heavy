openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Petstore
  description: A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification
  termsOfService: http://swagger.io/terms/
  contact:
    name: Swagger API Team
    email: apiteam@swagger.io
    url: http://swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://petstore.swagger.io/api
paths:
  /test-base64:
    x-resource: controllers.pets.TestBase64
    post:
      parameters:
        - name: a
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - id
                - file_name
                - file
              properties:
                id:
                  type: integer
                  format: int32
                file_name:
                  type: string
                file:
                  description: base64 encoded file
                  type: string
                  format: byte
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                properties:
                  file:
                    type: string
                    format: byte
                  input_decoded_file:
                    type: string
          headers:
            X-Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              required: true
              schema:
                type: integer
            X-Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              required: true
              schema:
                type: integer
            X-Rate-Limit-Reset:
              description: The number of seconds left in the current period
              required: true
              schema:
                type: integer

  /test-urlencoded:
    x-resource: controllers.pets.TestUrlencoded
    post:
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - id
                - file_name
              properties:
                id:
                  type: integer
                  format: int32
                file_name:
                  type: string
            encoding:
              id:
                style: form
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                description: Some response

  /test-multipart:
    x-resource: controllers.pets.TestMultipart
    post:
      operationId: post
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              required:
                - id
                - meta
                - photo
              properties:
                id:
                  type: integer
                  format: int32
                photo:
                  type: string
                  format: binary
                meta:
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      type: string
                artist:
                  type: array
                  items:
                    type: object
            encoding:
              id:
                style: form
              photo:
                # only accept png/jpeg
                contentType: image/png, image/jpeg
                headers:
                  X-Rate-Limit-Limit:
                    description: The number of allowed requests in the current period
                    required: true
                    schema:
                      type: integer
      responses:
        '200':
          description: photo successfully uploaded
          content:
            application/json:
              schema:
                type: string
        '400':
          description: bad request
          content:
            text/plain:
              schema:
                type: string

  /test-styles-array:
    x-resource: controllers.pets.TestStyles
    get:
      parameters:
        - name: x
          in: query
          allowEmptyValue: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: false
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
        '400':
          description: bad request
          content:
            text/plain:
              schema:
                type: string

  /test-styles-object:
    x-resource: controllers.pets.TestStyles
    get:
      parameters:
        - name: x
          in: query
          allowEmptyValue: false
          schema:
            type: object
          style: form
          explode: false
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                properties:
                  firstName:
                    type: string
                  role:
                    type: string
        '400':
          description: bad request
          content:
            text/plain:
              schema:
                type: string

  /pets:
    x-resource: controllers.pets.Pets
    get:
      description: |
        Returns all pets from the system that the user has access to
        Nam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.

        Sed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.
      operationId: findPets
      parameters:
        - name: tags
          in: query
          description: tags to filter by
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'pet.yaml#/Pet'
        '400':
          description: bad request
          content:
            text/plain:
              schema:
                type: string
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: 'error.yaml'
    post:
      description: Creates a new pet in the store.  Duplicates are allowed
      operationId: addPet
      requestBody:
        description: Pet to add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: 'pet.yaml#/NewPet'
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: 'pet.yaml#/Pet'
        '400':
          description: bad request
          content:
            text/plain:
              schema:
                type: string
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: 'error.yaml'
  /pets/{id}:
    x-resource: controllers.pets.Pet
    get:
      description: Returns a user based on a single ID, if the user does not have access to the pet
      operationId: findPetById
      parameters:
        - name: fake
          in: cookie
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: 'pet.yaml#/Pet'
        '400':
          description: bad request
          content:
            text/plain:
              schema:
                type: string

        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: 'error.yaml'
    delete:
      description: deletes a single pet based on the ID supplied
      operationId: deletePet
      responses:
        '204':
          description: pet deleted
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: bad request
          content:
            text/plain:
              schema:
                type: string
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: 'error.yaml'
    parameters:
      - name: id
        in: path
        description: ID of pet to fetch
        required: true
        schema:
          type: integer
          format: int64